name: update_release_draft.yml

on:
  push:
    branches:
      - main
  pull_request:

    types: [ opened, reopened, synchronize ]

permissions:
  contents: write
  packages: write

jobs:
  update_release_draft:
    permissions:
      contents: write  # for release-drafter/release-drafter to create a github release
      pull-requests: write  # for release-drafter/release-drafter to add label to PR
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_bots:
    name: 更新服务端telegram bots
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false

      - name: 更新telegram bots
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        continue-on-error: true
        with:
          host: ${{ secrets.VPS_HOST }}
          user: ${{ secrets.VPS_USER }}
          pass: ${{ secrets.VPS_PASS }}
          port: ${{ secrets.VPS_PORT }}
          connect_timeout: 10s
          first_ssh: |
            cd /root/code/telegram-bot
            git checkout .
            git pull --allow-unrelated-histories
            docker-compose down
            docker rmi -f telegram-bot_telegram-bot:latest
            docker-compose up -d
#            docker images  | grep telegram-bot_telegram-bot | awk '{print $3}' | xargs docker rmi
