# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

name: Publish Docker image

on:
  release:
    types: [ published ]

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-project:
    name: update-project
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: 更新telegram bots
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      continue-on-error: true
      with:
        host: ${{ secrets.VPS_HOST }}
        user: ${{ secrets.VPS_USER }}
        pass: ${{ secrets.VPS_PASS }}
        port: ${{ secrets.VPS_PORT }}
        connect_timeout: 10s
        first_ssh: |
          cd /root/code/telegram-bot
          git checkout .
          git checkout main
          git pull --allow-unrelated-histories
          docker-compose down
          docker rmi -f telegram-bot_telegram-bot:latest
          docker-compose up -d
          docker image prune -f